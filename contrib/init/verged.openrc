#!/sbin/openrc-run

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/bitphantom/.bitphantom3" ]; then
	bitphantomD_DEFAULT_DATADIR="/var/lib/bitphantom/.bitphantom3"
else
	bitphantomD_DEFAULT_DATADIR="/var/lib/bitphantomd"
fi

bitphantomD_CONFIGFILE=${bitphantomD_CONFIGFILE:-/etc/bitphantom/bitphantom.conf}
bitphantomD_PIDDIR=${bitphantomD_PIDDIR:-/var/run/bitphantomd}
bitphantomD_PIDFILE=${bitphantomD_PIDFILE:-${bitphantomD_PIDDIR}/bitphantomd.pid}
bitphantomD_DATADIR=${bitphantomD_DATADIR:-${bitphantomD_DEFAULT_DATADIR}}
bitphantomD_USER=${bitphantomD_USER:-${bitphantom_USER:-bitphantom}}
bitphantomD_GROUP=${bitphantomD_GROUP:-bitphantom}
bitphantomD_BIN=${bitphantomD_BIN:-/usr/bin/bitphantomd}
bitphantomD_NICE=${bitphantomD_NICE:-${NICELEVEL:-0}}
bitphantomD_OPTS="${bitphantomD_OPTS:-${bitphantom_OPTS}}"

name="bitphantom Core Daemon"
description="bitphantom cryptocurrency P2P network daemon"

command="/usr/bin/bitphantomd"
command_args="-pid=\"${bitphantomD_PIDFILE}\" \
		-conf=\"${bitphantomD_CONFIGFILE}\" \
		-datadir=\"${bitphantomD_DATADIR}\" \
		-daemon \
		${bitphantomD_OPTS}"

required_files="${bitphantomD_CONFIGFILE}"
start_stop_daemon_args="-u ${bitphantomD_USER} \
			-N ${bitphantomD_NICE} -w 2000"
pidfile="${bitphantomD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${bitphantomD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${bitphantomD_USER}:${bitphantomD_GROUP}" \
	"${bitphantomD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${bitphantomD_USER}:${bitphantomD_GROUP}" \
	"${bitphantomD_PIDDIR}"

	checkpath -f \
	-o ${bitphantomD_USER}:${bitphantomD_GROUP} \
	-m 0660 \
	${bitphantomD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${bitphantomD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run bitphantomd."
		eerror "The setting must appear in ${bitphantomD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"bitphantom Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
